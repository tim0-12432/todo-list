{"version":3,"sources":["components/TodoExportMenu.js","components/Settings.js","components/Header.js","components/Form.js","components/TodoContextMenu.js","components/Todo.js","components/TodoList.js","components/FloatingInfo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoExportMenu","title","todos","dialog","useDialog","useState","value","getData","map","todo","text","completed","download","data","type","extension","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","setAttribute","toLowerCase","replace","console","log","body","appendChild","click","removeChild","csvRows","headers","Object","keys","push","join","row","values","header","escaped","csvData","jsonBegin","jsonRows","concat","indexOf","length","jsonData","txtRows","className","onClick","exportCSV","close","exportJSON","disabled","exportText","Settings","setTodos","opened","setOpened","exportHandler","CustomDialog","showCloseIcon","importHandler","getElementById","style","display","class","id","accept","onChange","e","selectedFile","files","fileChangeHandler","Header","changeTitleHandler","Form","inputText","setInputText","setFilter","target","preventDefault","Math","random","name","TodoContextMenu","completeHandler","deleteHandler","changeTextHandler","Prompt","defaultValue","isRequired","okButtonText","undefined","newText","item","Todo","filter","el","draggableId","index","getIndex","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","boxShadow","isDraggingOver","TodoList","onDragEnd","param","sourceIndex","source","destinationIndex","destination","copy","splice","droppableId","droppableProps","placeholder","FloatingInfo","App","filteredTodos","setFilteredTodos","setTitle","useEffect","getLocalTodos","getLocalTitle","groupCollapsed","info","groupEnd","saveToLocalTodos","saveToLocalTitle","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","titleLocal","newTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yOA2GeA,MAxGf,YAA2C,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACvBC,EAASC,cADuB,EAGZC,qBAHY,mBAG/BC,EAH+B,KAKhCC,GALgC,KAKtB,WACZ,OAAOL,EAAMM,KAAI,SAAAC,GAAI,MAAK,CACtBA,KAAMA,EAAKC,KACXC,UAAWF,EAAKE,gBAGlBC,EAAW,SAACC,EAAMC,EAAMC,GAC1B,IAAMC,EAAO,IAAIC,KAAK,CAACJ,GAAO,CAAEC,KAAMA,IAChCI,EAAMC,OAAOC,IAAIC,gBAAgBL,GACjCM,EAAIC,SAASC,cAAc,KACjCF,EAAEG,aAAa,SAAU,IACzBH,EAAEG,aAAa,OAAQP,GACvBI,EAAEG,aAAa,WAAf,UAA8BxB,EAAMyB,cAAcC,QAAQ,IAAK,KAA/D,YAAuEZ,IACvEa,QAAQC,IAAIhB,EAAMC,EAAMC,GACxBQ,SAASO,KAAKC,YAAYT,GAC1BA,EAAEU,QACFT,SAASO,KAAKG,YAAYX,IArBQ,4CAwBtC,wCAAAA,EAAA,sDACUT,EAAON,IACP2B,EAAU,GACVC,EAAUC,OAAOC,KAAKxB,EAAK,IACjCqB,EAAQI,KAAKH,EAAQI,KAAK,MAJ9B,cAKsB1B,GALtB,IAKI,IALJ,iBAKe2B,EALf,QAMcC,EAASN,EAAQ3B,KAAI,SAAAkC,GACvB,IAAMC,GAAW,GAAKH,EAAIE,IAASf,QAAQ,KAAM,OACjD,MAAM,IAAN,OAAWgB,EAAX,QAEJT,EAAQI,KAAKG,EAAOF,KAAK,OAL7B,uBAAyB,IAL7B,8BAYUK,EAAUV,EAAQK,KAAK,MAC7B3B,EAASgC,EAAS,WAAY,OAblC,4CAxBsC,kEAwCtC,kDAAAtB,EAAA,sDACUT,EAAON,IACPsC,EAFV,oBAEoC5C,EAFpC,eAGQ6C,EAAW,GACTX,EAAUC,OAAOC,KAAKxB,EAAK,IAJrC,cAKsBA,GALtB,IAKI,2BAAwB,CAAb2B,EAAa,QACpBM,EAAWA,EAASC,OAAO,MADP,cAECZ,GAFD,IAEpB,2BAAWO,EAAmB,QACpBC,GAAW,GAAKH,EAAIE,IAASf,QAAQ,KAAM,OACjDmB,EAAWA,EAASC,OAAT,WAAoBL,EAApB,MAAgCC,GACvCR,EAAQa,QAAQN,KAAYP,EAAQc,OAAQ,IAC5CH,EAAWA,EAASC,OAAO,MANf,8BASpBD,EAAWA,EAASC,OAAO,MAdnC,8BAgBUG,EAhBV,UAgByBL,GAhBzB,OAgBuCC,EAASnB,QAAQ,IAAK,IAAIoB,OAAO,OACpEnC,EAASsC,EAAU,mBAAoB,QAjB3C,4CAxCsC,kEA4DtC,sCAAA5B,EAAA,sDACUT,EAAON,IACT4C,EAAU,GACEf,OAAOC,KAAKxB,EAAK,IAHrC,cAIsBA,GAJtB,IAII,2BAAW2B,EAAa,QACdG,GAAW,GAAKH,EAAG,MAAUb,QAAQ,KAAM,OAEjDwB,GADAA,EAAUA,EAAQJ,OAAR,UAAkBP,EAAI7B,UAAY,UAAY,QAA9C,KAA2DgC,IACnDI,OAAO,MAPjC,8BAUInC,EADgBuC,EACE,OAAQ,OAV9B,4CA5DsC,sBAyEtC,OACI,sBAAKC,UAAU,oBAAf,UACI,yBAAQC,QAAS,YA3Ea,mCA4E1BC,GACAnD,EAAOoD,MAAMjD,IAFjB,UAII,mBAAG8C,UAAU,oBACb,wCAEJ,yBAAQC,QAAS,YAlFa,mCAmF1BG,GACArD,EAAOoD,MAAMjD,IAFjB,UAII,mBAAG8C,UAAU,cACb,yCAEJ,yBAAQK,UAAQ,EAAhB,UACI,mBAAGL,UAAU,oBACb,wCAEJ,yBAAQC,QAAS,YA7Fa,mCA8F1BK,GACAvD,EAAOoD,MAAMjD,IAFjB,UAII,mBAAG8C,UAAU,oBACb,4CCjCDO,EA/DE,SAAC,GAAgC,IAA9B1D,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAsB,KAAf0D,SACFvD,oBAAS,IADQ,mBACtCwD,EADsC,KAC9BC,EAD8B,KAMvCC,EAAa,uCAAG,sBAAAzC,EAAA,sEACG0C,YACjB,cAAC,EAAD,CAAgB/D,MAAQA,EACRC,MAAQA,IAExB,CACID,MAAO,iBACPgE,eAAe,IAPL,yDAAH,qDAWbC,EAAa,uCAAG,sBAAA5C,EAAA,sDACJC,SAAS4C,eAAe,qBAChCnC,QAFY,2CAAH,qDAoBnB,OACI,sBAAKoB,UAAU,qBAAf,UACI,qBAAKA,UAAU,eAAeC,QApClB,WAChBS,GAAWD,IAmCP,SACI,mBAAGT,UAAS,iBAAcS,EAAS,QAAS,WAEhD,sBAAKT,UAAU,gBAAgBgB,MAAO,CAAEC,QAAQ,GAAD,OAAMR,EAAS,OAAS,SAAvE,UACI,yBAAQR,QAAUa,EAAgBT,UAAQ,EAA1C,UACI,mBAAGa,MAAM,uBACT,2CAEJ,yBAAQjB,QAAUU,EAAlB,UACI,mBAAGO,MAAM,yBACT,8CAGR,uBACIC,GAAG,oBACHzD,KAAK,OACL0D,OAAO,qCACPJ,MAAO,CAACC,QAAS,QACjBI,SAAW,SAACC,GAAD,OApCG,SAACA,GACvB9C,QAAQC,IAAI,aACZ,IAAM8C,EAAeD,EAAEE,MAAM,GAW7BhD,QAAQC,IAAI8C,GAuBcE,CAAkBH,UCrDrCI,EATA,SAAC,GAAmC,IAAjC7E,EAAgC,EAAhCA,MAAO8E,EAAyB,EAAzBA,mBACrB,OACI,yBAAQ1B,QAAU0B,EAAlB,UACM9E,EACF,mBAAGmD,UAAU,0B,QCgCV4B,EAlCF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,aAAchF,EAAiC,EAAjCA,MAAO0D,EAA0B,EAA1BA,SAAUuB,EAAgB,EAAhBA,UAiBtD,OACI,iCACI,uBAAOV,SAlBU,SAACC,GACtBQ,EAAaR,EAAEU,OAAO9E,QAiBmBQ,KAAK,OAAOsC,UAAU,aAAa9C,MAAQ2E,IAChF,wBAAQ5B,QAhBU,SAACqB,GACvBA,EAAEW,iBACgB,KAAdJ,IACArB,EAAS,GAAD,mBACD1D,GADC,CACM,CAACQ,KAAMuE,EAAWtE,WAAW,EAAO4D,GAAoB,IAAhBe,KAAKC,aAE3DL,EAAa,MAUyBpE,KAAK,SAASsC,UAAU,cAA9D,SACI,mBAAGA,UAAU,yBAEjB,qBAAKA,UAAU,SAAf,SACI,yBAAQoC,KAAK,QAAQpC,UAAU,cAAcqB,SAX7B,SAACC,GACzBS,EAAUT,EAAEU,OAAO9E,QAUX,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,eC0BLmF,MApDf,YAAqF,IAA1DhF,EAAyD,EAAzDA,KAAMP,EAAmD,EAAnDA,MAAO0D,EAA4C,EAA5CA,SAAU8B,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,cACzDxF,EAASC,cADiE,EAGtDC,qBAHsD,mBAGzEC,EAHyE,KAK1EsF,GAL0E,KAKzD,uCAAG,4BAAAtE,EAAA,sEACAuE,YAAO,mBAAoB,CAAEC,aAAcrF,EAAKC,KAAMqF,YAAY,EAAMC,aAAc,WADtF,YAENC,KADVC,EADgB,SAGlBtC,EACI1D,EAAMM,KAAI,SAAC2F,GACP,OAAIA,EAAK5B,KAAO9D,EAAK8D,GACV,2BACA4B,GADP,IACazF,KAAMwF,IAGhBC,MAVG,2CAAH,sDAgBvB,OACI,sBAAK/C,UAAU,oBAAf,UACI,yBAAQC,QAAS,WACbuC,IACAzF,EAAOoD,MAAMjD,IAFjB,UAII,mBAAG8C,UAAU,sBACb,8CAEJ,yBAAQC,QAAS,WACbqC,IACAvF,EAAOoD,MAAMjD,IAFjB,UAII,mBAAG8C,UAAU,iBACb,uCAAU3C,EAAKE,UAAY,aAAe,WAA1C,cAEJ,yBAAQ0C,QAAS,WACbsC,IACAxF,EAAOoD,MAAMjD,IAFjB,UAII,mBAAG8C,UAAU,iBACb,gDAEJ,yBAAQK,UAAQ,EAAhB,UACI,mBAAGL,UAAU,8BACb,sDCuBDgD,EAnEF,SAAC,GAA+B,IAA7B3F,EAA4B,EAA5BA,KAAMP,EAAsB,EAAtBA,MAAO0D,EAAe,EAAfA,SACnB+B,EAAgB,SAACjB,GACnBd,EACI1D,EAAMmG,QAAO,SAACC,GAAD,OAAQA,EAAG/B,KAAO9D,EAAK8D,QAGtCmB,EAAkB,SAAChB,GACrBd,EACI1D,EAAMM,KAAI,SAAC2F,GACP,OAAIA,EAAK5B,KAAO9D,EAAK8D,GACV,2BACA4B,GADP,IACaxF,WAAYwF,EAAKxF,YAG3BwF,OAYnB,OACI,cAAC,IAAD,CAAWI,YAAW,oBAAiB9F,EAAK8D,IAAQiC,MATvC,WACb,IAAK,IAAIA,EAAQ,EAAGA,EAAQtG,EAAM+C,OAAQuD,IACtC,GAAI/F,EAAK8D,KAAOrE,EAAMsG,GAAOjC,GACzB,OAAOiC,EAM6CC,GAA5D,SACK,SAACC,EAAUC,GAAX,OACG,0DAAKvD,UAAU,OACXwD,IAAKF,EAASG,UACVH,EAASI,gBACTJ,EAASK,iBAHjB,IAII3C,MAAK,2BAAOsC,EAASI,eAAe1C,OAA/B,IAAsC4C,UAAWL,EAASM,eAAiB,6BAA+B,KAJnH,UAMI,mBAAG3C,MAAM,kBACT,oBAAIlB,UAAS,mBAAe3C,EAAKE,UAAY,aAAe,IACxD0C,QAAO,sBAAG,sBAAA/B,EAAA,6DACOb,EAAKC,KADZ,SAEesD,YACjB,cAAC,EAAD,CAAiBvD,KAAOA,EACRP,MAAQA,EACR0D,SAAWA,EACX8B,gBAAkBA,EAClBC,cAAgBA,IAEhC,CACI1F,MAAO,eACPgE,eAAe,IAXjB,yDADd,SAiBMxD,EAAKC,OAEX,wBAAQ2C,QAAUqC,EAAkBtC,UAAU,eAA9C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QAAUsC,EAAgBvC,UAAU,YAA5C,SACI,mBAAGA,UAAU,2BC5BtB8D,EAhCE,SAAC,GAAyB,IAAvBhH,EAAsB,EAAtBA,MAAO0D,EAAe,EAAfA,SAWvB,OACI,cAAC,IAAD,CAAiBuD,UAXH,SAACC,GAAW,IAAD,EACnBC,EAAcD,EAAME,OAAOd,MAC3Be,EAAgB,UAAGH,EAAMI,mBAAT,aAAG,EAAmBhB,MACxCiB,EAAI,YAAOvH,GACXqH,IACAE,EAAKC,OAAOH,EAAkB,EAAGE,EAAKC,OAAOL,EAAa,GAAG,IAC7DzD,EAAS6D,KAKb,SACI,qBAAKrE,UAAU,iBAAf,SACI,cAAC,IAAD,CAAWuE,YAAY,kBAAkB7G,KAAK,QAA9C,SACC,SAAC4F,EAAUC,GAAX,OACG,6CAAIvD,UAAU,YACVwD,IAAKF,EAASG,UACVH,EAASkB,gBAFjB,cAIM1H,EAAMM,KAAI,SAAAC,GAAI,OACZ,cAAC,EAAD,CAAMA,KAAOA,EAAuBP,MAAQA,EAAQ0D,SAAWA,GAArCnD,EAAK8D,OAElCmC,EAASmB,wBCHnBC,EAtBM,WAAO,IAAD,EACKzH,oBAAS,GADd,mBAChBwD,EADgB,KACRC,EADQ,KAOvB,OACI,sBAAKV,UAAU,gBAAf,UACI,qBAAKA,UAAU,eAAeC,QANlB,WAChBS,GAAWD,IAKP,SACI,mBAAGT,UAAS,iBAAcS,EAAS,QAAS,YAEhD,sBAAKT,UAAU,gBAAgBgB,MAAO,CAAEC,QAAQ,GAAD,OAAMR,EAAS,QAAU,SAAxE,UACI,8BAAG,mBAAGT,UAAU,uBAAhB,iBACA,8BAAG,mBAAGA,UAAU,oBAAhB,sBACA,8BAAG,mBAAGA,UAAU,eAAhB,kDACA,8BAAG,mBAAGA,UAAU,kBAAhB,yBC8DD2E,MAxEf,WAAgB,IAAD,EACuB1H,mBAAS,IADhC,mBACJ4E,EADI,KACOC,EADP,OAEe7E,mBAAS,IAFxB,mBAEJH,EAFI,KAEG0D,EAFH,OAGiBvD,mBAAS,OAH1B,mBAGJgG,EAHI,KAGIlB,EAHJ,OAI+B9E,mBAAS,IAJxC,mBAIJ2H,EAJI,KAIWC,EAJX,OAKe5H,mBAAS,gBALxB,mBAKJJ,EALI,KAKGiI,EALH,KAOXC,qBAAU,WACRC,IACAC,IACAzG,QAAQ0G,eAAe,cACvB1G,QAAQ2G,KAAK,kCACb3G,QAAQ4G,aACP,IACHL,qBAAU,WAER,OADAM,IACQpC,GACN,IAAK,YACH4B,EAAiB/H,EAAMmG,QAAO,SAAC5F,GAAD,OAA6B,IAAnBA,EAAKE,cAC7C,MACF,IAAK,cACHsH,EAAiB/H,EAAMmG,QAAO,SAAC5F,GAAD,OAA6B,IAAnBA,EAAKE,cAC7C,MACF,QACEsH,EAAiB/H,MAEpB,CAACA,EAAOmG,IACX8B,qBAAU,WACRO,MACC,CAACzI,IAEJ,IAAMwI,EAAmB,WACvBE,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAU5I,KAElDkI,EAAgB,WACpB,GAA+C,OAA3CO,aAAaI,QAAQ,kBACvBJ,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAU,SACjD,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,mBAChDnF,EAASoF,KAGPN,EAAmB,WACvBC,aAAaC,QAAQ,iBAAkB3I,IAEnCoI,EAAgB,WACpB,GAA+C,OAA3CM,aAAaI,QAAQ,kBACvBJ,aAAaC,QAAQ,iBAAkB3I,OAClC,CACL,IAAIiJ,EAAaP,aAAaI,QAAQ,kBACtCb,EAASgB,KAIPnE,EAAkB,uCAAG,4BAAAzD,EAAA,sEACFuE,YAAO,oBAAqB,CAAEC,aAAc7F,EAAO8F,YAAY,EAAMC,aAAc,WADjF,YAERC,KADXkD,EADmB,SAGvBjB,EAASiB,GAHc,2CAAH,qDAOxB,OACI,sBAAK/F,UAAU,MAAf,UACI,cAAC,EAAD,CAAUnD,MAAQA,EAAQC,MAAQA,EAAQ0D,SAAWA,IACrD,cAAC,EAAD,CAAQ3D,MAAQA,EAAQ8E,mBAAqBA,IAC7C,cAAC,EAAD,CAAME,UAAYA,EAAYC,aAAeA,EAAehF,MAAQA,EAAQ0D,SAAWA,EAAWuB,UAAYA,IAC9G,cAAC,EAAD,CAAUjF,MAAQ8H,EAAgBpE,SAAWA,IAC7C,cAAC,EAAD,QC/DGwF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxI,SAAS4C,eAAe,SAM1BiF,M","file":"static/js/main.39b23c74.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useDialog } from 'react-st-modal';\r\n\r\nfunction TodoExportMenu({ title, todos }) {\r\n    const dialog = useDialog();\r\n\r\n    const [value, setValue] = useState();\r\n\r\n    const getData = () => {\r\n        return todos.map(todo => ({\r\n            todo: todo.text,\r\n            completed: todo.completed\r\n        }));\r\n    }\r\n    const download = (data, type, extension) => {\r\n        const blob = new Blob([data], { type: type });\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.setAttribute(\"hidden\", \"\");\r\n        a.setAttribute(\"href\", url);\r\n        a.setAttribute(\"download\", `${title.toLowerCase().replace(\" \", \"-\")}.${extension}`);\r\n        console.log(data, type, extension);\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    }\r\n \r\n    async function exportCSV() {\r\n        const data = getData();\r\n        const csvRows = [];\r\n        const headers = Object.keys(data[0]);\r\n        csvRows.push(headers.join(','));\r\n        for (const row of data) {\r\n            const values = headers.map(header => {\r\n                const escaped = (\"\" + row[header]).replace(/\"/g, '\\\\\"');\r\n                return `\"${escaped}\"`;\r\n            });\r\n            csvRows.push(values.join(','));\r\n        }\r\n        const csvData = csvRows.join(\"\\n\");\r\n        download(csvData, \"text/csv\", \"csv\");\r\n    };\r\n\r\n    async function exportJSON() {\r\n        const data = getData();\r\n        const jsonBegin = `{\"title\":\"${ title }\",\"todos\":[`;\r\n        let jsonRows = \"\";\r\n        const headers = Object.keys(data[0]);\r\n        for (const row of data) {\r\n            jsonRows = jsonRows.concat(',{');\r\n            for (const header of headers) {\r\n                const escaped = (\"\" + row[header]).replace(/\"/g, '\\\\\"');\r\n                jsonRows = jsonRows.concat(`\"${header}\":`, escaped);\r\n                if (headers.indexOf(header) !== headers.length -1) {\r\n                    jsonRows = jsonRows.concat(\",\");\r\n                }\r\n            }\r\n            jsonRows = jsonRows.concat('}');\r\n        }\r\n        const jsonData = `${ jsonBegin }${ jsonRows.replace(\",\", \"\").concat(\"]}\") }`;\r\n        download(jsonData, \"application/json\", \"json\");\r\n    };\r\n\r\n    async function exportText() {\r\n        const data = getData();\r\n        let txtRows = \"\";\r\n        const headers = Object.keys(data[0]);\r\n        for (const row of data) {\r\n            const escaped = (\"\" + row[\"todo\"]).replace(/\"/g, '\\\\\"');\r\n            txtRows = txtRows.concat(`${row.completed ? \"&check;\" : \"&cir;\" } `, escaped);\r\n            txtRows = txtRows.concat('\\n');\r\n        }\r\n        const txtData = txtRows;\r\n        download(txtData, \"text\", \"txt\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-item-context\">\r\n            <button onClick={() => {\r\n                exportCSV();\r\n                dialog.close(value);\r\n            }}>\r\n                <i className=\"fas fa-file-csv\" />\r\n                <h3>CSV</h3>\r\n            </button>\r\n            <button onClick={() => {\r\n                exportJSON();\r\n                dialog.close(value);\r\n            }}>\r\n                <i className=\"fab fa-js\" />\r\n                <h3>JSON</h3>\r\n            </button>\r\n            <button disabled>\r\n                <i className=\"fas fa-file-pdf\" />\r\n                <h3>PDF</h3>\r\n            </button>\r\n            <button onClick={() => {\r\n                exportText();\r\n                dialog.close(value);\r\n            }}>\r\n                <i className=\"fas fa-file-alt\" />\r\n                <h3>TXT</h3>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoExportMenu;","\r\nimport { useState } from \"react\";\r\nimport { CustomDialog } from \"react-st-modal\";\r\nimport TodoExportMenu from \"./TodoExportMenu\";\r\n\r\nconst Settings = ({ title, todos, setTodos }) => {\r\n    const [opened, setOpened] = useState(false);\r\n\r\n    const openHandler = () => {\r\n        setOpened(!opened);\r\n    };\r\n    const exportHandler = async () => {\r\n        const result = await CustomDialog(\r\n            <TodoExportMenu title={ title }\r\n                            todos={ todos }\r\n            />,\r\n            {\r\n                title: \"Export Options\",\r\n                showCloseIcon: true,\r\n            }\r\n        );\r\n    };\r\n    const importHandler = async () => {\r\n        const input = document.getElementById(\"file-input-import\");\r\n        input.click();\r\n    };\r\n    const fileChangeHandler = (e) => {\r\n        console.log(\"read file\");\r\n        const selectedFile = e.files[0];\r\n        /*const result = await CustomDialog(\r\n            <TodoImportMenu title={ title }\r\n                            todos={ todos }\r\n                            setTodos={ setTodos }\r\n            />,\r\n            {\r\n                title: \"Import Options\",\r\n                showCloseIcon: true,\r\n            }\r\n        );*/\r\n        console.log(selectedFile);\r\n    };\r\n\r\n    return (\r\n        <div className=\"settings-container\">\r\n            <div className=\"settings-btn\" onClick={ openHandler }>\r\n                <i className={ `fas fa-${ opened ? \"times\": \"cog\" }` } />\r\n            </div>\r\n            <div className=\"settings-menu\" style={{ display: `${ opened ? \"flex\" : \"none\" }` }}>\r\n                <button onClick={ importHandler } disabled>\r\n                    <i class=\"fas fa-file-upload\" />\r\n                    <h3>Import</h3>\r\n                </button>\r\n                <button onClick={ exportHandler }>\r\n                    <i class=\"fas fa-file-download\" />\r\n                    <h3>Export</h3>\r\n                </button>\r\n            </div>\r\n            <input\r\n                id=\"file-input-import\"\r\n                type=\"file\"\r\n                accept=\"application/JSON, application/json\"\r\n                style={{display: \"none\"}}\r\n                onChange={ (e) => fileChangeHandler(e) }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","const Header = ({ title, changeTitleHandler }) => {\r\n    return (\r\n        <header onClick={ changeTitleHandler }>\r\n            { title }\r\n            <i className=\"fas fa-pencil-alt\" />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setFilter }) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        if (inputText !== \"\") {\r\n            setTodos([\r\n                ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n            ]);\r\n            setInputText(\"\");\r\n        }\r\n    };\r\n    const changeFilterHandler = (e) => {\r\n        setFilter(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <input onChange={ inputTextHandler } type=\"text\" className=\"todo-input\" value={ inputText } />\r\n            <button onClick={ submitTodoHandler } type=\"submit\" className=\"todo-button\">\r\n                <i className=\"fas fa-plus-square\" />\r\n            </button>\r\n            <div className=\"select\">\r\n                <select name=\"todos\" className=\"filter-todo\" onChange={ changeFilterHandler }>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import { useState } from \"react\";\r\nimport { Prompt, useDialog } from 'react-st-modal';\r\n\r\nfunction TodoContextMenu({ todo, todos, setTodos, completeHandler, deleteHandler }) {\r\n    const dialog = useDialog();\r\n\r\n    const [value, setValue] = useState();\r\n\r\n    const changeTextHandler = async () => {\r\n        const newText = await Prompt(\"Change todo item\", { defaultValue: todo.text, isRequired: true, okButtonText: \"change\" });\r\n        if (newText !== undefined) {\r\n            setTodos(\r\n                todos.map((item) => {\r\n                    if (item.id === todo.id) {\r\n                        return {\r\n                            ...item, text: newText\r\n                        };\r\n                    }\r\n                    return item;\r\n                })\r\n            );\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div className=\"todo-item-context\">\r\n            <button onClick={() => {\r\n                changeTextHandler();\r\n                dialog.close(value);\r\n            }}>\r\n                <i className=\"fas fa-pencil-alt\" />\r\n                <h3>Edit Text</h3>\r\n            </button>\r\n            <button onClick={() => {\r\n                completeHandler();\r\n                dialog.close(value);\r\n            }}>\r\n                <i className=\"fas fa-check\" />\r\n                <h3>{ `${ todo.completed ? \"Uncomplete\" : \"Complete\" } Todo` }</h3>\r\n            </button>\r\n            <button onClick={() => {\r\n                deleteHandler();\r\n                dialog.close(value);\r\n            }}>\r\n                <i className=\"fas fa-trash\" />\r\n                <h3>Delete Todo</h3>\r\n            </button>\r\n            <button disabled>\r\n                <i className=\"fas fa-angle-double-right\" />\r\n                <h3>Make Sub-Todo</h3>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoContextMenu;","import React from \"react\";\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { CustomDialog } from \"react-st-modal\";\r\nimport TodoContextMenu from \"./TodoContextMenu\";\r\n\r\nconst Todo = ({ todo, todos, setTodos }) => {\r\n    const deleteHandler = (e) => {\r\n        setTodos(\r\n            todos.filter((el) => el.id !== todo.id)\r\n        );\r\n    };\r\n    const completeHandler = (e) => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if (item.id === todo.id) {\r\n                    return {\r\n                        ...item, completed: !item.completed\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n    const getIndex = () => {\r\n        for (let index = 0; index < todos.length; index++) {\r\n            if (todo.id === todos[index].id) {\r\n                return index;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Draggable draggableId={ `draggable-${ todo.id }` } index={ getIndex() }>\r\n            {(provided, snapshot) => (\r\n                <div className=\"todo\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={{ ...provided.draggableProps.style, boxShadow: snapshot.isDraggingOver ? \"0 0 30px rgba(0, 0, 0, .3)\" : \"\" }}\r\n                >\r\n                    <i class=\"fas fa-equals\" />\r\n                    <li className={ `todo-item${todo.completed ? \" completed\" : \"\"}` }\r\n                        onClick={ async () => {\r\n                            const text = todo.text;\r\n                            const result = await CustomDialog(\r\n                                <TodoContextMenu todo={ todo }\r\n                                                todos={ todos }\r\n                                                setTodos={ setTodos }\r\n                                                completeHandler={ completeHandler }\r\n                                                deleteHandler={ deleteHandler }\r\n                                />,\r\n                                {\r\n                                    title: \"Todo Options\",\r\n                                    showCloseIcon: true,\r\n                                }\r\n                            );\r\n                        } }\r\n                    >\r\n                        { todo.text }\r\n                    </li>\r\n                    <button onClick={ completeHandler } className=\"complete-btn\">\r\n                        <i className=\"fas fa-check\" />\r\n                    </button>\r\n                    <button onClick={ deleteHandler } className=\"trash-btn\">\r\n                        <i className=\"fas fa-trash\" />\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nconst TodoList = ({ todos, setTodos }) => {\r\n    const onDragEnd = (param) => {\r\n        const sourceIndex = param.source.index;\r\n        const destinationIndex = param.destination?.index;\r\n        let copy = [...todos];\r\n        if (destinationIndex) {\r\n            copy.splice(destinationIndex, 0, copy.splice(sourceIndex, 1)[0])\r\n            setTodos(copy);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={ onDragEnd }>\r\n            <div className=\"todo-container\">\r\n                <Droppable droppableId=\"droppable-todos\" type=\"TODOS\">\r\n                {(provided, snapshot) => (\r\n                    <ul className=\"todo-list\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                    >\r\n                        { todos.map(todo => (\r\n                            <Todo todo={ todo } key={ todo.id } todos={ todos } setTodos={ setTodos } />\r\n                        )) }\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from \"react\";\r\n\r\nconst FloatingInfo = () => {\r\n    const [opened, setOpened] = useState(false);\r\n\r\n    const openHandler = () => {\r\n        setOpened(!opened);\r\n    };\r\n\r\n    return (\r\n        <div className=\"fab-container\">\r\n            <div className=\"floating-btn\" onClick={ openHandler }>\r\n                <i className={ `fas fa-${ opened ? \"times\": \"info\" }` } />\r\n            </div>\r\n            <div className=\"floating-text\" style={{ display: `${ opened ? \"block\" : \"none\" }` }}>\r\n                <p><i className=\"fas fa-cookie-bite\" />No cookies!</p>\r\n                <p><i className=\"fas fa-database\" />No hidden cache!</p>\r\n                <p><i className=\"far fa-hdd\" />Data stored in your browser's local storage!</p>\r\n                <p><i className=\"fab fa-github\" />Open source!</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FloatingInfo;","import React, { useState, useEffect } from \"react\";\nimport { Prompt } from \"react-st-modal\";\nimport Settings from \"./components/Settings\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport FloatingInfo from \"./components/FloatingInfo\";\n\nfunction App() {\n    const [inputText, setInputText] = useState(\"\");\n    const [todos, setTodos] = useState([]);\n    const [filter, setFilter] = useState(\"all\");\n    const [filteredTodos, setFilteredTodos] = useState([]);\n    const [title, setTitle] = useState(\"My Todo List\");\n\n    useEffect(() => {\n      getLocalTodos();\n      getLocalTitle();\n      console.groupCollapsed(\"Easteregg!\");\n      console.info(\"Congratulations! You found me!\");\n      console.groupEnd();\n    }, []);\n    useEffect(() => {\n      saveToLocalTodos();\n      switch (filter) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n      }\n    }, [todos, filter]);\n    useEffect(() => {\n      saveToLocalTitle();\n    }, [title]);\n\n    const saveToLocalTodos = () => {\n      localStorage.setItem(\"todo-app.todos\", JSON.stringify(todos));\n    };\n    const getLocalTodos = () => {\n      if (localStorage.getItem(\"todo-app.todos\") === null) {\n        localStorage.setItem(\"todo-app.todos\", JSON.stringify([]));\n      } else {\n        let todoLocal = JSON.parse(localStorage.getItem(\"todo-app.todos\"));\n        setTodos(todoLocal);\n      }\n    };\n    const saveToLocalTitle = () => {\n      localStorage.setItem(\"todo-app.title\", title);\n    };\n    const getLocalTitle = () => {\n      if (localStorage.getItem(\"todo-app.title\") === null) {\n        localStorage.setItem(\"todo-app.title\", title);\n      } else {\n        let titleLocal = localStorage.getItem(\"todo-app.title\");\n        setTitle(titleLocal);\n      }\n    };\n\n    const changeTitleHandler = async () => {\n      const newTitle = await Prompt(\"Change list title\", { defaultValue: title, isRequired: true, okButtonText: \"change\" });\n      if (newTitle !== undefined) {\n        setTitle(newTitle);\n      }\n    }\n\n    return (\n        <div className=\"App\">\n            <Settings title={ title } todos={ todos } setTodos={ setTodos } />\n            <Header title={ title } changeTitleHandler={ changeTitleHandler } />\n            <Form inputText={ inputText } setInputText={ setInputText } todos={ todos } setTodos={ setTodos } setFilter={ setFilter } />\n            <TodoList todos={ filteredTodos } setTodos={ setTodos } />\n            <FloatingInfo />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}