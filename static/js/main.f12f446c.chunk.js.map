{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/FloatingInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setFilter","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","deleteHandler","filter","el","completeHandler","map","item","draggableId","index","length","getIndex","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","boxShadow","isDraggingOver","class","TodoList","onDragEnd","param","sourceIndex","source","destinationIndex","destination","copy","splice","droppableId","droppableProps","placeholder","FloatingInfo","useState","opened","setOpened","display","App","filteredTodos","setFilteredTodos","title","setTitle","useEffect","getLocalTodos","getLocalTitle","console","groupCollapsed","info","groupEnd","saveToLocalTodos","saveToLocalTitle","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","titleLocal","changeTitleHandler","a","Prompt","defaultValue","isRequired","okButtonText","undefined","newTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f12f446c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setFilter }) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        if (inputText !== \"\") {\r\n            setTodos([\r\n                ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n            ]);\r\n            setInputText(\"\");\r\n        }\r\n    };\r\n    const changeFilterHandler = (e) => {\r\n        setFilter(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <input onChange={ inputTextHandler } type=\"text\" className=\"todo-input\" value={ inputText } />\r\n            <button onClick={ submitTodoHandler } type=\"submit\" className=\"todo-button\">\r\n                <i className=\"fas fa-plus-square\" />\r\n            </button>\r\n            <div className=\"select\">\r\n                <select name=\"todos\" className=\"filter-todo\" onChange={ changeFilterHandler }>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Todo = ({ todo, todos, setTodos }) => {\r\n    const deleteHandler = (e) => {\r\n        setTodos(\r\n            todos.filter((el) => el.id !== todo.id)\r\n        );\r\n    };\r\n    const completeHandler = (e) => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if (item.id === todo.id) {\r\n                    return {\r\n                        ...item, completed: !item.completed\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n    const getIndex = () => {\r\n        for (let index = 0; index < todos.length; index++) {\r\n            if (todo.id === todos[index].id) {\r\n                return index;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Draggable draggableId={ `draggable-${ todo.id }` } index={ getIndex() }>\r\n            {(provided, snapshot) => (\r\n                <div className=\"todo\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={{ ...provided.draggableProps.style, boxShadow: snapshot.isDraggingOver ? \"0 0 30px rgba(0, 0, 0, .3)\" : \"\" }}\r\n                >\r\n                    <i class=\"fas fa-equals\" />\r\n                    <li className={ `todo-item${todo.completed ? \" completed\" : \"\"}` }>\r\n                        { todo.text }\r\n                    </li>\r\n                    <button onClick={ completeHandler } className=\"complete-btn\">\r\n                        <i className=\"fas fa-check\" />\r\n                    </button>\r\n                    <button onClick={ deleteHandler } className=\"trash-btn\">\r\n                        <i className=\"fas fa-trash\" />\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nconst TodoList = ({ todos, setTodos }) => {\r\n    const onDragEnd = (param) => {\r\n        const sourceIndex = param.source.index;\r\n        const destinationIndex = param.destination?.index;\r\n        let copy = [...todos];\r\n        if (destinationIndex) {\r\n            copy.splice(destinationIndex, 0, copy.splice(sourceIndex, 1)[0])\r\n            setTodos(copy);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={ onDragEnd }>\r\n            <div className=\"todo-container\">\r\n                <Droppable droppableId=\"droppable-todos\" type=\"TODOS\">\r\n                {(provided, snapshot) => (\r\n                    <ul className=\"todo-list\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                    >\r\n                        { todos.map(todo => (\r\n                            <Todo todo={ todo } key={ todo.id } todos={ todos } setTodos={ setTodos } />\r\n                        )) }\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from \"react\";\r\n\r\nconst FloatingInfo = () => {\r\n    const [opened, setOpened] = useState(false);\r\n\r\n    const openHandler = () => {\r\n        setOpened(!opened);\r\n    };\r\n\r\n    return (\r\n        <div className=\"fab-container\">\r\n            <div className=\"floating-btn\" onClick={ openHandler }>\r\n                <i className={ `fas fa-${ opened ? \"times\": \"info\" }` } />\r\n            </div>\r\n            <div className=\"floating-text\" style={{ display: `${ opened ? \"block\" : \"none\" }` }}>\r\n                <p><i className=\"fas fa-cookie-bite\" />No cookies!</p>\r\n                <p><i className=\"fas fa-database\" />No hidden cache!</p>\r\n                <p><i className=\"far fa-hdd\" />Data stored in your browser's local storage!</p>\r\n                <p><i className=\"fab fa-github\" />Open source!</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FloatingInfo;","import React, { useState, useEffect } from \"react\";\nimport { Prompt } from \"react-st-modal\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport FloatingInfo from \"./components/FloatingInfo\";\n\nfunction App() {\n    const [inputText, setInputText] = useState(\"\");\n    const [todos, setTodos] = useState([]);\n    const [filter, setFilter] = useState(\"all\");\n    const [filteredTodos, setFilteredTodos] = useState([]);\n    const [title, setTitle] = useState(\"My Todo List\");\n\n    useEffect(() => {\n      getLocalTodos();\n      getLocalTitle();\n      console.groupCollapsed(\"Easteregg!\");\n      console.info(\"Congratulations! You found me!\");\n      console.groupEnd();\n    }, []);\n    useEffect(() => {\n      saveToLocalTodos();\n      switch (filter) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n      }\n    }, [todos, filter]);\n    useEffect(() => {\n      saveToLocalTitle();\n    }, [title]);\n\n    const saveToLocalTodos = () => {\n      localStorage.setItem(\"todo-app.todos\", JSON.stringify(todos));\n    };\n    const getLocalTodos = () => {\n      if (localStorage.getItem(\"todo-app.todos\") === null) {\n        localStorage.setItem(\"todo-app.todos\", JSON.stringify([]));\n      } else {\n        let todoLocal = JSON.parse(localStorage.getItem(\"todo-app.todos\"));\n        setTodos(todoLocal);\n      }\n    };\n    const saveToLocalTitle = () => {\n      localStorage.setItem(\"todo-app.title\", title);\n    };\n    const getLocalTitle = () => {\n      if (localStorage.getItem(\"todo-app.title\") === null) {\n        localStorage.setItem(\"todo-app.title\", title);\n      } else {\n        let titleLocal = localStorage.getItem(\"todo-app.title\");\n        setTitle(titleLocal);\n      }\n    };\n\n    const changeTitleHandler = async () => {\n      const newTitle = await Prompt(\"Change list title\", { defaultValue: title, isRequired: true, okButtonText: \"change\" });\n      if (newTitle !== undefined) {\n        setTitle(newTitle);\n      }\n    }\n\n    return (\n        <div className=\"App\">\n            <header onClick={ changeTitleHandler }>\n              { title }\n              <i className=\"fas fa-pencil-alt\" />\n            </header>\n            <Form inputText={ inputText } setInputText={ setInputText } todos={ todos } setTodos={ setTodos } setFilter={ setFilter } />\n            <TodoList todos={ filteredTodos } setTodos={ setTodos } />\n            <FloatingInfo />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}